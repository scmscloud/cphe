apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-apiserver
  labels:
    app: apiserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: apiserver
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      containers:
      - name: apiserver
        image: {{ .Values.registry }}/{{ .Values.repository }}/kube-apiserver:{{ .Chart.AppVersion }}
        command:
          - kube-apiserver
          - --bind-address=0.0.0.0
          - --secure-port=443
          - --service-cluster-ip-range=10.2.0.0/12
          - --external-hostname={{ .Values.apiserver.ingress.hostname }}
          - --allow-privileged=true
          - --authorization-mode=Node,RBAC

          - --egress-selector-config-file=/var/lib/kubernetes/konnectivity-configuration/egress-selector-configuration.yaml
          
          - --client-ca-file=/var/lib/kubernetes/certificate-authority/tls.crt

          - --tls-cert-file=/var/lib/kubernetes/apiserver/tls.crt
          - --tls-private-key-file=/var/lib/kubernetes/apiserver/tls.key

          - --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota
          - --enable-bootstrap-token-auth=true

          - --etcd-servers=http://etcd-client.{{ .Release.Namespace }}.svc.cluster.local:2379
          #- --etcd-cafile=/var/lib/kubernetes/certs/etcd/ca.crt
          #- --etcd-certfile=/var/lib/kubernetes/certs/apiserver-etcd-client.crt
          #- --etcd-keyfile=/var/lib/kubernetes/certs/apiserver-etcd-client.key
          
          - --kubelet-client-certificate=/var/lib/kubernetes/apiserver-kubelet/tls.crt
          - --kubelet-client-key=/var/lib/kubernetes/apiserver-kubelet/tls.key
          - --kubelet-preferred-address-types=InternalIP ## "InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP"

          #- --proxy-client-cert-file=/var/lib/kubernetes/certs/front-proxy-client.crt
          #- --proxy-client-key-file=/var/lib/kubernetes/certs/front-proxy-client.key

          - --requestheader-client-ca-file=/var/lib/kubernetes/certificate-authority/ca.crt
          - --requestheader-allowed-names=front-proxy-client
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User

          - --service-account-issuer=https://kubernetes.default.svc.cluster.local
          - --service-account-key-file=/var/lib/kubernetes/service-account/tls.crt
          - --service-account-signing-key-file=/var/lib/kubernetes/service-account/tls.key

          - "--oidc-issuer-url={{ .Values.apiserver.oidc.issuer }}"
          - "--oidc-signing-algs={{ .Values.apiserver.oidc.algs }}"
          - "--oidc-client-id=$(OIDC_CLIENT)"
          - "--oidc-username-claim={{ .Values.apiserver.oidc.username.name }}"
          - "--oidc-username-prefix={{ .Values.apiserver.oidc.username.prefix }}"
          - "--oidc-groups-claim={{ .Values.apiserver.oidc.groups.name }}"
          - "--oidc-groups-prefix={{ .Values.apiserver.oidc.groups.prefix }}"
        ports:
        - containerPort: 443
        volumeMounts:
        - name: certificate-authority
          mountPath: /var/lib/kubernetes/certificate-authority
          readOnly: true
        - name: certificate-apiserver
          mountPath: /var/lib/kubernetes/apiserver
        - name: certificate-kubelet-apiserver
          mountPath: /var/lib/kubernetes/apiserver-kubelet
          readOnly: true
        - name: certificate-service-account
          mountPath: /var/lib/kubernetes/service-account
          readOnly: true
        - name: konnectivity-configuration
          mountPath: /var/lib/kubernetes/konnectivity-configuration
          readOnly: true
        env:
          - name: OIDC_CLIENT
            valueFrom:
              secretKeyRef:
                name: {{ .Values.apiserver.oidc.secretName }}
                key: OIDC_CLIENT
        securityContext:
          allowPrivilegeEscalation: true
      volumes:
      - name: certificate-authority
        secret:
          secretName: kubernetes-ca
      - name: certificate-apiserver
        secret:
          secretName: kube-apiserver
      - name: certificate-kubelet-apiserver
        secret:
          secretName: kube-apiserver-kubelet-client
      - name: certificate-service-account
        secret:
          secretName: kube-service-accounts
      - name: konnectivity-configuration
        configMap:
          name: konnectivity
